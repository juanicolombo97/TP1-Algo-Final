TestCase subclass: #PersonaTests	instanceVariableNames: ''	classVariableNames: ''	package: 'test-tp1-103471'!!PersonaTests methodsFor: 'tests' stamp: 'Anonymous 5/20/2021 00:43'!test01SeCreaPersonaYNoPuedeCircular	| persona |	persona := Persona new.		self deny: (persona puedeCircular ).! !!PersonaTests methodsFor: 'tests' stamp: 'Anonymous 5/20/2021 00:55'!test02PersonaVacunadaPuedeCircular	| persona |	persona :=  Persona  new.		persona vacunar.		self assert: (persona puedeCircular).! !TestCase subclass: #RegistroPersonasTests	instanceVariableNames: 'registro'	classVariableNames: ''	package: 'test-tp1-103471'!!RegistroPersonasTests methodsFor: 'tests' stamp: 'Anonymous 5/20/2021 00:51'!setUp 	registro := RegistroPersonas new.	! !!RegistroPersonasTests methodsFor: 'tests' stamp: 'Anonymous 5/20/2021 00:51'!test01PersonaRecienAgregadaNoPuedeCircular 	registro := RegistroPersonas new.		registro nuevaPersona: 'Joaquin'.		self deny: (registro puedeCircular: 'Joaquin').! !!RegistroPersonasTests methodsFor: 'tests' stamp: 'Anonymous 5/20/2021 00:52'!test02PersonaRecienVacunadaPuedeCircular	registro nuevaPersona: 'Martin'.		registro estaVacunadx: 'Martin'.		self assert: (registro puedeCircular: 'Martin').! !